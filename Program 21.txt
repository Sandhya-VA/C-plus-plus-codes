/*
  Objective: To implement Overloading new and delete operator.
  Author: Sandhya V
  Created On: 06/10/21
  Modified On:
  Dependencies:None
*/
//the preprocessor segment including the required files during the compilation
#include <iostream>
//additional namespaces required
using namespace std;
//class creation
class Student
{
  //private variables
  string name;
  int age;
  public:
  Student(){
    cout<<"Constructor is called\n"<<endl;
  }
  Student(string name, int age){
    this->name=name;
    this->age=age;
  }
  void display(){
    cout<<"Name: "<<name<<endl;
    cout<<"Age: "<<age<<endl;
  }
  void *operator new(size_t size){
    cout<<"Overloading new operator with size: "<<size<<endl;
    void *p=::operator new(size);
    return p;
  }
  void operator delete(void *p){
    cout<<"Overloading delete operator"<<endl;
    free(p);
  }
};
//Main Driver code
int main() {
 Student *p=new Student("Sandy",20);
 p->display();
 delete p;
}