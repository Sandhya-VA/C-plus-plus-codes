/*objective: To perform basic calculator operation(add, subtraction,multiplication,division) by creation of object of the calculator class.
Author: Sandhya V
Created On: 04/10/2021
Modified On:
Dependencies:None
*/
//the preprocessor segment including the required files during the compilation
#include <iostream>
using namespace std;
//the class is going to handle the operations for two operands
//variable as the datamemebers
//functions as the member fuctions/ operations to be prformed on the data members
class Calculator
{
    int firstNo, secondNo;

    public:
        //constructor which will be called automatically at the creation of the class object
        Calculator(int fNo, int sNo)// this is a special fucntion with no return type and with the exact name as the class has
        {
            cout<<"Class constructor called\n";
            firstNo=fNo;
            secondNo=sNo;
        }

        //function prototype
        int add();//second number will be added to the first number
        int mul();
        float div();
        
        //function definition inside of the class
        int sub()//second number will be subtracted from the first number
        {
            return firstNo-secondNo;
        }// such definition shall be used in case the fuction body contains no more than 4-5 line of code
};

//outside of the class
// [retrun type of the fuction] [Class name]::[functionname]([param]){\\code for the operation to be performed}
int Calculator::add()
{
    return firstNo + secondNo;
}
int Calculator::mul()
{
    return firstNo * secondNo;
}
float Calculator::div()
{
    return firstNo / secondNo;
}



int add(int firstNo, int secondNo);//here just the type of the parameters will also work
//void print();

int main() {
    Calculator sanCalc(10,5);// an object of class Calculator is created with the explicit constortor call with two integer parameters.

    cout<<"\nThe addition of the values is:"<<sanCalc.add();
    cout<<"\nThe subtraction of the values is:"<<sanCalc.sub();
    cout<<"\nThe multiplication of the values is:"<<sanCalc.mul();
    cout<<"\nThe division of the values is:"<<sanCalc.div();

    return 0;
}


